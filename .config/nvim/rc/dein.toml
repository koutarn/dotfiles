[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'b3nj5m1n/kommentary'
[[plugins]]
repo = 'folke/todo-comments.nvim'
[[plugins]]
repo = 'folke/which-key.nvim'
[[plugins]]
repo = 'glepnir/indent-guides.nvim'
[[plugins]]
repo = 'kevinhwang91/nvim-bqf'
[[plugins]]
repo = 'kevinhwang91/nvim-hlslens'
[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
[[plugins]]
repo = 'mfussenegger/nvim-dap'
[[plugins]]
repo = 'Pocco81/DAPInstall.nvim'
[[plugins]]
repo = 'monaqa/dial.nvim'
[[plugins]]
repo = 'romgrk/barbar.nvim'
[[plugins]]
repo = 'tversteeg/registers.nvim'
[[plugins]]
repo = 'windwp/nvim-spectre'
# on_if 'executable('rg') && executable('sed')'

# "treesitter依存
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
[[plugins]]
repo = 'code-biscuits/nvim-biscuits'
[[plugins]]
repo = 'p00f/nvim-ts-rainbow'
[[plugins]]
repo = 'winston0410/smart-cursor.nvim'
[[plugins]]
repo = 'JoosepAlviste/nvim-ts-context-commentstring'

[[plugins]]
repo = 'hachibeeDI/vim-vbnet'
# on_if 'has('win32') || has('win64')'

# "color scheme
[[plugins]]
repo = 'sainnhe/edge'
hook_add = '''
let g:edge_style = 'aura'
let g:edge_enable_italic = 1
let g:edge_disable_italic_comment = 0
let g:edge_cursor = 'green'
let g:edge_transparent_background = 0
let g:edge_menu_selection_background = 'blue'
let g:edge_show_eob = 0 
let g:edge_diagnostic_text_highlight = 1
let g:edge_diagnostic_line_highlight = 1
let g:edge_diagnostic_virtual_text = 'grey'
let g:edge_current_word = 'bold'
let g:edge_lightline_disable_bold = 0
colorscheme edge
'''

# "Coding
[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'MattesGroeger/vim-bookmarks'
[[plugins]]
repo = 'Shougo/context_filetype.vim'
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
[[plugins]]
repo = 'cohama/lexima.vim'
[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
[[plugins]]
repo = 'godlygeek/tabular'
hook_add = '''
vnoremap <Leader><Leader> :Tabularize /
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
[[plugins]]
repo = 'itchyny/vim-highlighturl'
[[plugins]]
repo = 'junegunn/fzf'
[[plugins]]
repo = 'lambdalisue/gina.vim'
[[plugins]]
repo = 'lambdalisue/suda.vim'
[[plugins]]
repo = 'lambdalisue/vim-findent'
[[plugins]]
repo = 'liuchengxu/vista.vim'
[[plugins]]
repo = 'markonm/traces.vim'
[[plugins]]
repo = 'mattn/vim-findroot'
[[plugins]]
repo = 'mattn/vim-maketable'
[[plugins]]
repo = 'mg979/vim-visual-multi'
[[plugins]]
repo = 'obcat/vim-ipos'
[[plugins]]
repo = 'plasticboy/vim-markdown'
[[plugins]]
repo = 'reireias/vim-cheatsheet'
[[plugins]]
repo = 'simeji/winresizer'
[[plugins]]
repo = 'skanehira/preview-markdown.vim'
[[plugins]]
repo = 'skanehira/translate.vim'
[[plugins]]
repo = 't9md/vim-quickhl'
[[plugins]]
repo = 'thinca/vim-localrc'
[[plugins]]
repo = 'thinca/vim-qfreplace'
[[plugins]]
repo = 'thinca/vim-quickrun'
[[plugins]]
repo = 'tyru/capture.vim'
[[plugins]]
repo = 'kuuote/gina-preview.vim'

# "syntax
[[plugins]]
repo = 'rhysd/vim-gfm-syntax'

# "deno
[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
    let g:denops#debug=1
'''
# on_if 'executable('deno')'
[[plugins]]
repo = 'vim-skk/skkeleton'
[[plugins]]
repo = 'delphinus/skkeleton_indicator.nvim'

# "ddc
[[plugins]]
repo = 'Shougo/ddc.vim'
[[plugins]]
repo = 'Shougo/pum.vim'

# "source
[[plugins]]
repo = 'Shougo/ddc-around'
[[plugins]]
repo = 'LumaKernel/ddc-file'
[[plugins]]
repo = 'shun/ddc-vim-lsp'
[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
[[plugins]]
repo = 'Shougo/ddc-cmdline'
[[plugins]]
repo = 'Shougo/neco-vim'
[[plugins]]
repo = 'ippachi/ddc-yank'

# "matcher
[[plugins]]
repo = 'Shougo/ddc-matcher_head'
[[plugins]]
repo = 'matsui54/ddc-matcher_fuzzy'
[[plugins]]
repo = 'tani/ddc-fuzzy'

# "sorter
[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

# "converter
[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'

# "ddu
[[plugins]]
repo = 'Shougo/ddu.vim'
[[plugins]]
repo = 'Shougo/ddu-ui-ff'
[[plugins]]
repo = 'Shougo/ddu-commands.vim'

# "ui

# "kind
[[plugins]]
repo = 'Shougo/ddu-kind-file'

# "source
[[plugins]]
repo = 'Shougo/ddu-source-file'
[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
[[plugins]]
repo = 'Shougo/ddu-source-register'
[[plugins]]
repo = 'shun/ddu-source-buffer'
[[plugins]]
repo = 'shun/ddu-source-rg'

# "matcher
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'

# "Filer
[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
noremap <silent><Leader>ff <Cmd>Fern . -stay -drawer -keep -toggle -reveal=%<CR>

let g:fern#keepalt_on_edit = 1
let g:fern#disable_default_mappings = 1
let g:fern#default_hidden = 1
let g:fern#hide_cursor = 0
let g:fern#disable_drawer_auto_resize = 0
let g:fern#mark_symbol                       = '●'
let g:fern#renderer#default#collapsed_symbol = '▷ '
let g:fern#renderer#default#expanded_symbol  = '▼ '
let g:fern#renderer#default#leading          = ' '
let g:fern#renderer#default#leaf_symbol      = ' '
let g:fern#renderer#default#root_symbol      = '~ '
let g:fern#drawer_width = 40

function! s:init_fern() abort
    nmap <buffer><Leader>r <Plug>(fern-action-rename)
    nmap <buffer><Leader>c <Plug>(fern-action-copy)
    nmap <buffer><Leader>n <Plug>(fern-action-new-file)
    nmap <buffer><Leader>N <Plug>(fern-action-new-dir)
    nmap <buffer><Leader>d <Plug>(fern-action-trash)

    nmap <buffer><Leader>g <Plug>(fern-action-grep)

    nmap <buffer><Leader>i <Plug>(fern-action-include)
    nmap <buffer><Leader>e <Plug>(fern-action-exclude)

    " nmap <buffer> <C-l> <Plug>(fern-action-redraw)

    "open or move directory
    nmap <buffer>e <Plug>(fern-action-open:system)
    nmap <buffer>h <Plug>(fern-action-collapse)
    nmap <buffer>l <Plug>(fern-action-open-or-expand)
    nmap <buffer><CR> <Plug>(fern-action-open-or-expand)
    nmap <buffer>o <Plug>(fern-action-open-or-expand)

    nmap <buffer>L <Plug>(fern-enter-and-tcd)
    nmap <buffer>H <Plug>(fern-leave-and-tcd)

    nmap <buffer> <Plug>(fern-enter-and-tcd)
    \ <Plug>(fern-action-enter)
    \ <Plug>(fern-wait)
    \ <Plug>(fern-action-tcd:root)

    nmap <buffer> <Plug>(fern-leave-and-tcd)
    \ <Plug>(fern-action-leave)
    \ <Plug>(fern-wait)
    \ <Plug>(fern-action-tcd:root)

endfunction

augroup vimrc_fern
    autocmd!
    autocmd FileType fern call s:init_fern()
augroup END
'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'
[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
[[plugins]]
repo = 'lambdalisue/fern-mapping-project-top.vim'
[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'
[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'
[[plugins]]
repo = 'LumaKernel/fern-mapping-fzf.vim'
[[plugins]]
repo = 'yuki-yano/fern-preview.vim'

# "Others
[[plugins]]
repo = 'twitvim/twitvim'
[[plugins]]
repo = 'xolox/vim-misc'
[[plugins]]
repo = 'tyru/open-browser.vim'
[[plugins]]
repo = 'ryanoasis/vim-devicons'
[[plugins]]
repo = 'voldikss/vim-floaterm'

# "help
[[plugins]]
repo = 'vim-jp/vimdoc-ja'

# "operator
[[plugins]]
repo = 'kana/vim-operator-user'
[[plugins]]
repo = 'kana/vim-operator-replace'
[[plugins]]
repo = 'machakann/vim-sandwich'

# "text object
[[plugins]]
repo = 'glts/vim-textobj-comment'
[[plugins]]
repo = 'kana/vim-textobj-entire'
[[plugins]]
repo = 'kana/vim-textobj-function'
[[plugins]]
repo = 'kana/vim-textobj-indent'
[[plugins]]
repo = 'kana/vim-textobj-line'
[[plugins]]
repo = 'kana/vim-textobj-user'
[[plugins]]
repo = 'machakann/vim-textobj-functioncall'
[[plugins]]
repo = 'mattn/vim-textobj-url'
[[plugins]]
repo = 'rhysd/vim-textobj-anyblock'
[[plugins]]
repo = 'sgur/vim-textobj-parameter'
[[plugins]]
repo = 'thinca/vim-textobj-between'
